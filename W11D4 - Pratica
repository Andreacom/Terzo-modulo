/*
Elenco delle transazioni dei clienti canadesi nel 2010
1) Transazioni nel 2010
2) clienti canadesi
*/

SELECT CustomerKey
FROM FactInternetSales
WHERE YEAR (OrderDate) = 2010

SELECT CONCAT (FirstName, ' ', LastName) AS NomeCognome
FROM DimCustomer

SELECT GeographyKey
FROM DimGeography
WHERE EnglishCountryRegionName = 'Canada'

SELECT DimCustomer.CustomerKey
		, CONCAT (FirstName, ' ', LastName) AS NomeCognome
FROM DimCustomer
WHERE CustomerKey IN (SELECT CustomerKey
					FROM FactInternetSales
					WHERE YEAR (OrderDate) = 2010)
AND
		GeographyKey IN (SELECT GeographyKey
						FROM DimGeography
						WHERE EnglishCountryRegionName = 'Canada')

/*
Calcola l’ultima volta che è stato venduto ciascun prodotto.
Il result set deve esporre anche il nome prodotto
1) lista prodotti
2) Data massima
*/

SELECT MAX(OrderDate)
FROM FactResellerSales

SELECT DISTINCT S1.SalesOrderNumber
			, S1.OrderDate		 
FROM FactResellerSales AS S1
WHERE S1.OrderDate = (SELECT MAX(OrderDate)
						FROM FactResellerSales AS S2
						WHERE S1.SalesOrderNumber = S2.SalesOrderNumber)

/*
Esponi in output per ciascun codice documento (SalesOrderNumber) 
l’ultima riga di corpo (SalesorderLineNumber)
1) lista sales orede number
2)massimo orderLine
*/

SELECT DISTINCT SalesOrderLineNumber 
				, SalesOrderNumber
				, DimProduct.EnglishProductName
FROM FactResellerSales AS S1
	LEFT JOIN DimProduct ON S1.ProductKey = DimProduct.ProductKey
WHERE SalesOrderLineNumber = (SELECT MAX(SalesOrderLineNumber)
								FROM FactResellerSales AS S2
								WHERE S1.SalesOrderNumber = S2.SalesOrderNumber)
ORDER BY SalesOrderLineNumber DESC

---------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------

--Visualizzare per ogni studente la matricola, il nome, il voto massimo, minimo e medio conseguito negli esami

SELECT s.Matricola
	, s.Nome
	, MAX (e.Voto)
	, MIN (e.Voto)
	, AVG (e.Voto)
FROM Studente AS s
LEFT JOIN Esame as e ON Studente.Matricola = Esame.MatricolaStudente
GROUP BY s.Matricola, s.Nome

/*
Visualizzare - per ogni studente con media voti maggiore di 25 
e che ha sostenuto esami in almeno 10 date
la matricola, il nome, il voto massimo, minimo e medio conseguito negli esami.
Ordinare per voto.
*/

SELECT 
	s.Matricola
	, s.Nome
	, MAX (e.Voto)
	, MIN (e.Voto)
	, AVG (e.Voto)
FROM Studente AS s
LEFT JOIN Esame AS e ON Studente.Matricola = Esame.MatricolaStudente
GROUP BY s.Matricola, s.Nome
HAVING AVG(e.Voto) > 25 AND COUNT(e.Data) >= 10
ORDER BY Voto

---------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------









